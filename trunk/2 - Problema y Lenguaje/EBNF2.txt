SYNTAX ::= [DECL_GLOBAL] GRAPHS_SET
DECL-GLOBAL ::= DECL
GRAPHS_SET ::= GRAPH {GRAPH}
GRAPH ::= graph ID '{' BODY '}' ';'
BODY ::= (DECL_LOCAL ARCS | OPS_GEN) OPS
DECL_LOCAL ::= DECL
DECL ::= DECL_NODES {DECL_NODES} DECL_EDGES {DECL_EDGES}
DECL_NODES ::= node ID {',' ID} ';'
DECL_EDGES ::= edge ID ['(' INT ')'] {',' ID ['(' INT ')']} ';'
ARCS ::= ARC {ARC}
ARC ::= ID '=' ID ('-' | '->') ID ';'
OPS_GEN ::= OP_GEN
OP_GEN::= OP5
OPS ::= {OP}
OP ::= op (OP1|OP2) ';'
OP1 ::= OPN1 '(' ID ')'
OPN1 ::= minimumSpanningTree
OP2 ::= OPN2 '(' ID ',' ID ')'
OPN2 ::= shortestPath
OP5 ::= OPN5 '(' ID ',' ID ',' ID ',' ID ',' ID ')'
OPN5 ::= union
ID ::= (A-Z|a-z) {A-Z|a-z|0-9}
INT ::= 0 | (1-9) {0-9}